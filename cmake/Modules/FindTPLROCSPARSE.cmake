# MPL: 05/01/2023: This file follows the partern of FindTPLROCBLAS.cmake

# MPL: v3
FIND_PACKAGE(ROCSPARSE)
if(TARGET roc::rocsparse)
  SET(TPL_ROCSPARSE_IMPORTED_NAME roc::rocsparse)
  SET(TPL_IMPORTED_NAME roc::rocsparse)
  ADD_LIBRARY(KokkosKernels::ROCSPARSE ALIAS roc::rocsparse)
ELSE()
  MESSAGE(FATAL_ERROR "Package ROCSPARSE requested but not found")
ENDIF()

## MPL: v2
#IF (ROCSPARSE_LIBRARY_DIRS AND ROCSPARSE_LIBRARIES)
#  KOKKOSKERNELS_FIND_IMPORTED(ROCSPARSE INTERFACE LIBRARIES ${ROCSPARSE_LIBRARIES} LIBRARY_PATHS ${ROCSPARSE_LIBRARY_DIRS})
#ELSEIF (ROCSPARSE_LIBRARIES)
#  KOKKOSKERNELS_FIND_IMPORTED(ROCSPARSE INTERFACE LIBRARIES ${ROCSPARSE_LIBRARIES})
#ELSEIF (ROCSPARSE_LIBRARY_DIRS)
#ELSE()
#    FIND_PACKAGE(ROCSPARSE)
#    if(NOT TARGET roc::rocsparse)
#        MESSAGE( "TARGET roc::ROCSPARSE NOT FOUND")
#        #Important note here: this find Module is named TPLROCSPARSE
#        #The eventual target is named roc::ROCSPARSE. To avoid naming conflicts
#        #the find module is called TPLROCSPARSE. This call will cause
#        #the find_package call to fail in a "standard" CMake way
#        FIND_PACKAGE_HANDLE_STANDARD_ARGS(TPLROCSPARSE REQUIRED_VARS ROCSPARSE_FOUND)
#    ELSE()
#        # if the package is found, we can verify that some variables are defined using FIND_PACKAGE_HANDLE_STANDARD_ARGS
#        MESSAGE( "TARGET roc::ROCSPARSE FOUND")
#        #The libraries might be empty - OR they might explicitly be not found
#        IF("${ROCSPARSE_LIBRARIES}" MATCHES "NOTFOUND")
#          MESSAGE( "ROCSPARSE_LIBRARIES is not found")

#          FIND_PACKAGE_HANDLE_STANDARD_ARGS(TPLROCSPARSE REQUIRED_VARS ROCSPARSE_LIBRARIES)
#        ELSE()
#            MESSAGE( "ROCSPARSE_LIBRARIES is not found")
#            message("TPLROCSPARSE LIBRARIES VARIABLE IS ${ROCSPARSE_LIBRARIES}")
#            KOKKOSKERNELS_CREATE_IMPORTED_TPL(ROCSPARSE INTERFACE LINK_LIBRARIES ${ROCSPARSE_LIBRARIES})
#        ENDIF()
#    endif()
#ENDIF()

# MPL: v1
#IF (ROCSPARSE_LIBRARY_DIRS AND ROCSPARSE_LIBRARIES)
#  KOKKOSKERNELS_FIND_IMPORTED(ROCSPARSE INTERFACE LIBRARIES ${ROCSPARSE_LIBRARIES} LIBRARY_PATHS ${ROCSPARSE_LIBRARY_DIRS})
#ELSEIF (ROCSPARSE_LIBRARIES)
#  KOKKOSKERNELS_FIND_IMPORTED(ROCSPARSE INTERFACE LIBRARIES ${ROCSPARSE_LIBRARIES})
#ELSEIF (ROCSPARSE_LIBRARY_DIRS)
#  KOKKOSKERNELS_FIND_IMPORTED(ROCSPARSE INTERFACE LIBRARIES rocsparse LIBRARY_PATHS ${ROCSPARSE_LIBRARY_DIRS})
#ELSEIF (KokkosKernels_ROCSPARSE_ROOT)
#  KOKKOSKERNELS_FIND_IMPORTED(ROCSPARSE INTERFACE
#    LIBRARIES
#      rocsparse
#    LIBRARY_PATHS
#      ${KokkosKernels_ROCSPARSE_ROOT}/lib
#    HEADERS
#      rocsparse.h
#    HEADER_PATHS
#      ${KokkosKernels_ROCSPARSE_ROOT}/include
#  )
#ELSEIF (DEFINED ENV{ROCM_PATH})
#  MESSAGE(STATUS "Detected ROCM_PATH: ENV{ROCM_PATH}")
#  SET(ROCSPARSE_ROOT "$ENV{ROCM_PATH}/rocsparse")
#  KOKKOSKERNELS_FIND_IMPORTED(ROCSPARSE INTERFACE
#    LIBRARIES
#      rocsparse
#    LIBRARY_PATHS
#      ${ROCSPARSE_ROOT}/lib
#    HEADERS
#      rocsparse.h
#    HEADER_PATHS
#      ${ROCSPARSE_ROOT}/include
#  )
#ELSE()
#  MESSAGE(ERROR "rocSPARSE was not detected properly, please disable it or provide sufficient information at configure time.")
#  # Todo: figure out how to use the target defined during rocsparse installation
#  # FIND_PACKAGE(ROCSPARSE REQUIRED)
#  # KOKKOSKERNELS_CREATE_IMPORTED_TPL(ROCSPARSE INTERFACE LINK_LIBRARIES ${ROCSPARSE_LIBRARIES})
#  # GET_TARGET_PROPERTY(ROCSPARSE_LINK_LIBRARIES ${ROCSPARSE_LIBRARIES} IMPORTED_LINK_INTERFACE_LIBRARIES)
#ENDIF()
